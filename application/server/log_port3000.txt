>>>connectGatewayFromConfig:  
Platform = LOCAL
walletpath = ../../gateway/local/gen_local_wallet
user: admin, pwd:  adminpw, usertype:  admin
MSP ID: Org1
Connect to Fabric gateway.
Use network channel: channelone
Use gensupplychainnet smart contract.
Connecting to event hub...peer0.org1.example.com
Server listening on 3000

>>>setUserContext...
Connect to Fabric gateway with userid:Walmart
>>>utils.submitTx...orderProduct ({"orderId":"order-33fd","productId":"stick123","price":"5","quantity":"10","producerId":"ABFarm","retailerId":"Walmart","barcode":"1234562"})
test { class: 'org.supplychainnet.order',
  key: '"order-33fd"',
  currentState: null,
  orderId: 'order-33fd',
  productId: 'stick123',
  price: '5',
  quantity: '10',
  producerId: 'ABFarm',
  retailerId: 'Walmart',
  modifiedBy: 'Walmart',
  currentOrderState: 1,
  trackingInfo: '',
  event_type: 'createOrder' }
Event payload: {"class":"org.supplychainnet.order","key":"\"order-33fd\"","currentState":null,"orderId":"order-33fd","productId":"stick123","price":"5","quantity":"10","producerId":"ABFarm","retailerId":"Walmart","modifiedBy":"Walmart","currentOrderState":1,"trackingInfo":"","event_type":"createOrder"}

------------------------------------
utils.js: Transaction submitted successfully

Process orderProduct transaction.
order order-33fd : price = 5, quantity = 10, producer = ABFarm, consumer = Walmart, trackingInfo = , state = 1, barcode = undefined

>>>setUserContext...
Connect to Fabric gateway with userid:Walmart
>>>utils.submitTx...queryAllOrders ()
utils.js: Transaction submitted successfully
>>>getUser...
{ id: 'admin', usertype: 'admin' }
utils.js:prepareErrorResponse(): Invalid header;  User, undefined could not be registered.
{ code: 1001,
  message: 'Invalid header;  User, undefined could not be registered.',
  error:
   TypeError: Promise resolver undefined is not a function
       at new Promise (<anonymous>)
       at getUsernamePassword (/opt/ksbc/fabric-contract-ABAC/application/server/supplychain.js:29:16)
       at /opt/ksbc/fabric-contract-ABAC/application/server/supplychain.js:263:9
       at Layer.handle [as handle_request] (/opt/ksbc/fabric-contract-ABAC/application/server/node_modules/express/lib/router/layer.js:95:5)
       at next (/opt/ksbc/fabric-contract-ABAC/application/server/node_modules/express/lib/router/route.js:137:13)
       at Route.dispatch (/opt/ksbc/fabric-contract-ABAC/application/server/node_modules/express/lib/router/route.js:112:3)
       at Layer.handle [as handle_request] (/opt/ksbc/fabric-contract-ABAC/application/server/node_modules/express/lib/router/layer.js:95:5)
       at /opt/ksbc/fabric-contract-ABAC/application/server/node_modules/express/lib/router/index.js:281:22
       at Function.process_params (/opt/ksbc/fabric-contract-ABAC/application/server/node_modules/express/lib/router/index.js:335:12)
       at next (/opt/ksbc/fabric-contract-ABAC/application/server/node_modules/express/lib/router/index.js:275:10) }
utils.js:prepareErrorResponse(): Invalid header;  User, Bigbazzar1 could not be registered.
{ code: 1001,
  message: 'Invalid header;  User, Bigbazzar1 could not be registered.',
  error:
   TypeError: Promise resolver undefined is not a function
       at new Promise (<anonymous>)
       at getUsernamePassword (/opt/ksbc/fabric-contract-ABAC/application/server/supplychain.js:29:16)
       at /opt/ksbc/fabric-contract-ABAC/application/server/supplychain.js:263:9
       at Layer.handle [as handle_request] (/opt/ksbc/fabric-contract-ABAC/application/server/node_modules/express/lib/router/layer.js:95:5)
       at next (/opt/ksbc/fabric-contract-ABAC/application/server/node_modules/express/lib/router/route.js:137:13)
       at Route.dispatch (/opt/ksbc/fabric-contract-ABAC/application/server/node_modules/express/lib/router/route.js:112:3)
       at Layer.handle [as handle_request] (/opt/ksbc/fabric-contract-ABAC/application/server/node_modules/express/lib/router/layer.js:95:5)
       at /opt/ksbc/fabric-contract-ABAC/application/server/node_modules/express/lib/router/index.js:281:22
       at Function.process_params (/opt/ksbc/fabric-contract-ABAC/application/server/node_modules/express/lib/router/index.js:335:12)
       at next (/opt/ksbc/fabric-contract-ABAC/application/server/node_modules/express/lib/router/index.js:275:10) }
utils.js:prepareErrorResponse(): Invalid header;  User, Bigbazzar1 could not be registered.
{ code: 1001,
  message: 'Invalid header;  User, Bigbazzar1 could not be registered.',
  error:
   TypeError: Promise resolver undefined is not a function
       at new Promise (<anonymous>)
       at getUsernamePassword (/opt/ksbc/fabric-contract-ABAC/application/server/supplychain.js:46:16)
       at /opt/ksbc/fabric-contract-ABAC/application/server/supplychain.js:263:9
       at Layer.handle [as handle_request] (/opt/ksbc/fabric-contract-ABAC/application/server/node_modules/express/lib/router/layer.js:95:5)
       at next (/opt/ksbc/fabric-contract-ABAC/application/server/node_modules/express/lib/router/route.js:137:13)
       at Route.dispatch (/opt/ksbc/fabric-contract-ABAC/application/server/node_modules/express/lib/router/route.js:112:3)
       at Layer.handle [as handle_request] (/opt/ksbc/fabric-contract-ABAC/application/server/node_modules/express/lib/router/layer.js:95:5)
       at /opt/ksbc/fabric-contract-ABAC/application/server/node_modules/express/lib/router/index.js:281:22
       at Function.process_params (/opt/ksbc/fabric-contract-ABAC/application/server/node_modules/express/lib/router/index.js:335:12)
       at next (/opt/ksbc/fabric-contract-ABAC/application/server/node_modules/express/lib/router/index.js:275:10) }

------------  utils.registerUser ---------------

 userid: Bigbuzz, pwd: Bigbuzz, usertype: retailer

 Secret returned: Bigbuzz
utils.js:prepareErrorResponse(): Verify if the user is registered and enrolled.
{ code: 1000,
  message: 'Verify if the user is registered and enrolled.',
  error: {} }

------------  utils.enrollUser -----------------
userid: Bigbuzz, pwd: Bigbuzz, usertype:Retailer
first  ca.org1.example.com
msg: Successfully enrolled user, Bigbuzz and imported into the wallet
